if (argCount != 1) {
    hasInterrupt = EX_InvalidArgument(ec, primitiveMethodWrongArgCountError("string split method", 1, argCount));
} else {
    value2 = funcArgs[0];
    if (value2.type != Types.STRING) {
        hasInterrupt = EX_InvalidArgument(ec, "string split method requires another string as input.");
    } else {
        stringList = string1.Split((string) value2.internalValue);

        _len = stringList.Size();
        list1 = makeEmptyList(globals.stringType, _len);
        for (i = 0; i < _len; i += 1) {
            if (@ext_boolean("ARRAY_IS_LIST")) {
                list1.list.Add(buildString(globals, stringList[i]));
            } else {
                list1.array[i] = buildString(globals, stringList[i]);
            }
        }
        list1.size = _len;

        output = new Value(Types.LIST, list1);
    }
}
