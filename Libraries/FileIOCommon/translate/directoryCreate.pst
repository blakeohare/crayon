Value lib_fileiocommon_function_directoryCreate(Array<Value> args) {
    bool bool1 = false;
    int i = 0;
    int int1 = 0;
    string string1 = "";
    List<string> stringList1 = null;
    Value output = VALUE_NULL;
    Value arg1 = args[0];
    Value arg2 = args[1];
    Value arg3 = args[2];
    string1 = ((string) arg2.internalValue);
    if (((bool) arg3.internalValue)) {
        int1 = 0;
        if (!Native._lib_fileiocommon_directoryExists(lib_fileiocommon_getDiskObject(arg1), Native._lib_fileiocommon_getDirRoot(string1))) {
            int1 = 4;
        } else {
            stringList1 = new List<string>();
            bool1 = true;
            while (bool1 && !Native._lib_fileiocommon_directoryExists(lib_fileiocommon_getDiskObject(arg1), string1)) {
                stringList1.Add(string1);
                int1 = Native._lib_fileiocommon_getDirParent(string1, Core.StringBuffer16);
                string1 = Core.StringBuffer16[0];
                if (int1 != 0) {
                    bool1 = false;
                }
            }
            if (bool1) {
                for (i = stringList1.Size() - 1; i >= 0; i -= 1) {
                    string1 = stringList1[i];
                    int1 = Native._lib_fileiocommon_directoryCreate(lib_fileiocommon_getDiskObject(arg1), string1);
                    if (int1 != 0) {
                        i = -1;
                    }
                }
            }
        }
    } else {
        int1 = Native._lib_fileiocommon_directoryCreate(lib_fileiocommon_getDiskObject(arg1), string1);
    }
    output = buildInteger(int1);
    return output;
}
