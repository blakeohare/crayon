namespace Nori {

    const Canvas_Width = 'cv.width';
    const Canvas_Height = 'cv.height';
    const Canvas_NearestNeighbor = 'cv.nn';

    class Canvas : Element {

        field _u3canvas = null;

        constructor() : base('Canvas') {
            this.setCanvasWidth(100).setCanvasHeight(100);
        }

        function getCanvasWidth() { return this._getIntProperty(Canvas_Width); }
        function setCanvasWidth(value) { return this._setIntProperty(Canvas_Width, value); }
        function getCanvasHeight() { return this._getIntProperty(Canvas_Height); }
        function setCanvasHeight(value) { return this._setIntProperty(Canvas_Height, value); }
        function isNearestNeighbor() { return this._getBoolProperty(Canvas_NearestNeighbor); }
        function setNearestNeighbor(value) { return this._setBoolProperty(Canvas_NearestNeighbor, value); }

        function setAttributeWithString(name, strValue) {
            switch (name) {
                case 'canvasWidth': return this._setIntProperty(Canvas_Width, Core.parseInt(strValue));
                case 'canvasHeight': return this._setIntProperty(Canvas_Height, Core.parseInt(strValue));
                case 'nearestNeighbor': return this._setBooleanAsString(Canvas_NearestNeighbor, strValue);
                default: return base.setAttributeWithString(name, strValue);
            }
        }
    }
}
