import Environment;

namespace BrowserInterop {

    // This is deprecated! Use the nested call directly instead.
    function launchBrowser(url) {
        return BrowserNavigation.navigate(url);
    }

    enum FrameTarget {
        PARENT = 1,
        BLANK = 2,
        SELF = 3,
        TOP = 4,
        NAMED = 5,
    }

    static class BrowserNavigation {

        static function navigate(url, frame = FrameTarget.SELF, frameName = null) {
            if (Core.typeof(url) != Core.Type.STRING) throw new InvalidArgumentException("URL must be a string.");

            if (url.startsWith('/') && Environment.getEnvironment()['type'] == 'web') {
                // this is fine
            } else if (!url.startsWith('http://') && !url.startsWith('https://')) {
                throw new InvalidArgumentException("Can only open URLs beginning with 'http://' or 'https://'.");
            }

            if (!FrameTarget.values.contains(frame)) {
                throw new InvalidArgumentException("Invalid frame target");
            }
            $$$('launchBrowser', url, frame, (frameName ?? '') + '');
        }

        static function setPath(path) {
            $$$('browserInteropSetUrlPath', '' + path);
        }
        static function getPath() {
            return $$$('browserInteropGetUrlPath');
        }
    }
}
