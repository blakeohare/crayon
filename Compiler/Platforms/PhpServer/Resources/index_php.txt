<?php

	$_CRAYON_GLOBALS = array();

	function TranslationHelper_setProgramData($value) {
		global $_CRAYON_GLOBALS;
		$_CRAYON_GLOBALS['pd'] = $value;
	}

	function TranslationHelper_getProgramData() {
		global $_CRAYON_GLOBALS;
		return $_CRAYON_GLOBALS['pd'];
	}
	
	function TranslationHelper_startVm($vm) {
		return TranslationHelper_handleInterpreterResult(PastelGeneratedCode::startVm($vm));
	}

	function TranslationHelper_runInterpreter($execId) {
		$vm = TranslationHelper_getProgramData();
		return TranslationHelper_handleInterpreterResult(PastelGeneratedCode::runInterpreter($vm, $execId));
	}
	
	function TranslationHelper_handleInterpreterResult($result) {
		$vm = TranslationHelper_getProgramData();
		$status = PastelGeneratedCode::getVmResultStatus($result);
		while ($status == 5 || $status == 6) { // REINVOKE || LOAD_ASSEMBLY
			if ($status == 6) { // LOAD_ASSEMBLY
				$parts = explode(',', PastelGeneratedCode::getVmResultAssemblyInfo($result));
				$name = $parts[0];
				$version = $parts[1];
				$startupfunc = $parts[2];
				TranslationHelper_LoadAssembly($name, $version, $startupfunc);
			} else {
				$delay = PastelGeneratedCode::getVmReinvokeDelay($result);
				// NO! Do not allow this.
				// sleep($delay);
			}

			$result = PastelGeneratedCode::runInterpreter($vm, PastelGeneratedCode::getVmResultExecId($result));
			$status = PastelGeneratedCode::getVmResultStatus($result);
		}
		if ($status == 1) { // FINISHED
			if (PastelGeneratedCode::isVmResultRootExecContext($result)) {
				exit;
		}
			return $result;
		}

		if ($status == 2) return $result; // SUSPEND
		if ($status == 3) { // FATAL
			if (PastelGeneratedCode::isVmResultRootExecContext($result)) {
				exit;
			}
			return $result;
		}

		throw new Exception(); // invalid status
	}

	function TranslationHelper_getFunction($name) {
		// TODO: implement this.
		return null;
	}

	function TranslationHelper_LoadAssembly($name, $version, $startupFunc) {
		if (strlen($startupFunc) > 0) {
			$fn = TranslationHelper_getFunction($startupFunc);
			if ($fn !== null) {
				// TODO: implement this.
				// fn(TranslationHelper_getProgramData(), new PastelPtrArray());
			}
		}
	}

	require 'crayon_gen/structs.php';
	require 'crayon_gen/functions.php';
	require 'crayon_gen/bytecode.php';
	require 'crayon_gen/resource_manifest.php';

	$vm_context = PastelGeneratedCode::createVm($_CRAYON_BYTE_CODE, $_CRAYON_RESOURCE_MANIFEST);
	TranslationHelper_setProgramData($vm_context);
	
	PastelGeneratedCode::vmEnvSetCommandLineArgs($vm_context, new PastelPtrArray());
	TranslationHelper_startVm($vm_context);

?>