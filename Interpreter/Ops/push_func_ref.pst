value = null;
switch (row[1]) {
    case 0:
        value = new Value(Types.FUNCTION, new FunctionPointer(FunctionPointerType.FUNCTION, null, 0, row[0]));
        break;
    case 1:
        value = new Value(Types.FUNCTION, new FunctionPointer(FunctionPointerType.METHOD, stack.objectContext, row[2], row[0]));
        break;
    case 2:
        classId = row[2];
        classInfo = classTable[classId];
        @import("InvokeStaticConstructor.cry");
        if (bool1) {
            value = new Value(Types.FUNCTION, new FunctionPointer(FunctionPointerType.STATIC_METHOD, null, classId, row[0]));
        } else {
            value = null;
        }
        break;
}
if (value != null) {
    @import("ValueStackCapacityCheck.cry");
    valueStack[valueStackSize] = value;
    valueStackSize += 1;
}
