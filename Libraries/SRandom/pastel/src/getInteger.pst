/*
    args[0] -> integer pointer (integer in a list) to the active seed value.
*/
VM.Value lib_srandom_getInteger(VM.VmContext vm, Array<VM.Value> args) {
    VM.ListImpl intPtr = (VM.ListImpl)args[0].internalValue;
    int value1 = 0;
    if (@ext_boolean("ARRAY_IS_LIST")) {
        value1 = (((int)intPtr.list[0].internalValue * 20077) + 12345) & 65535;
    } else {
        value1 = (((int)intPtr.array[0].internalValue * 20077) + 12345) & 65535;
    }
    int value2 = ((value1 * 20077) + 12345) & 65535;
    int value3 = ((value2 * 20077) + 12345) & 65535;
    int value4 = ((value3 * 20077) + 12345) & 65535;
    if (@ext_boolean("ARRAY_IS_LIST")) {
        intPtr.list[0] = VM.buildInteger(vm.globals, value4);
    } else {
        intPtr.array[0] = VM.buildInteger(vm.globals, value4);
    }
    value1 = (value1 >> 8) & 255; // 8 bits
    value2 = (value2 >> 8) & 255; // 8 bits
    value3 = (value3 >> 8) & 255; // 8 bits
    value4 = (value4 >> 8) & 127; // 7 bits
    return VM.buildInteger(vm.globals, (value4 << 24) | (value3 << 16) | (value2 << 8) | value1);
}
