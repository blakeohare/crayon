string IpcNamedPipe_create(Value objValue, Value nameValue) {
    ObjectInstance obj = (ObjectInstance)objValue.internalValue;
    obj.nativeData = new Array<object>(1);
    obj.nativeData[0] = Extension.CoreFunc_NamedPipeCreate((string)nameValue.internalValue);
    return null;
}

string IpcNamedPipe_send(Value objValue, Value strValue) {
    object pipe = getNativeDataItem(objValue, 0);
    return Extension.CoreFunc_NamedPipeSend(pipe, (string) strValue.internalValue);
}

string IpcNamedPipe_flush(Value objValue) {
    object pipe = getNativeDataItem(objValue, 0);
    return Extension.CoreFunc_NamedPipeFlush(pipe);
}

string IpcNamedPipeServer_create(Value objValue, Value nameValue, Value startFn, Value dataFn, Value closeFn) {
    ObjectInstance obj = (ObjectInstance)objValue.internalValue;
    obj.nativeData = new Array<object>(1);
    obj.nativeData[0] = Extension.CoreFunc_NamedPipeServerCreate((string)nameValue.internalValue, startFn, dataFn, closeFn);
    return null;
}

string IpcNamedPipeServer_close(Value objValue) {
    ObjectInstance obj = (ObjectInstance)objValue.internalValue;
    object pipe = obj.nativeData[0];
    return Extension.CoreFunc_NamedPipeServerClose(pipe);
}

string IpcUnixSocketClient_create(ObjectInstance inst, string path, Value onReadyCb, Value onDisconnectCb) {
    inst.nativeData = new Array<object>(1);
    return Extension.UnixSocket_ClientCreate(inst.nativeData, path, onReadyCb, onDisconnectCb);
}

string IpcUnixSocketClient_send(object client, string msg) {
    return Extension.UnixSocket_ClientSend(client, msg);
}

string IpcUnixSocketServer_create(ObjectInstance inst, string path, Value onRecvCb) {
    inst.nativeData = new Array<object>(1);
    return Extension.UnixSocket_ServerCreate(inst.nativeData, path, onRecvCb);
}

int IpcUnixSocketServer_disconnect(object server) {
    Extension.UnixSocket_ServerDisconnect(server);
    return 0;
}
