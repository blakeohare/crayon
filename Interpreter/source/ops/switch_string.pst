/*
    row[0] -> default jump offset
    row[2n + 1] -> literal ID for string
    row[2n + 2] -> jump offset
*/

if (@ext_boolean("HAS_INCREMENT")) {
    value = valueStack[--valueStackSize];
} else {
    valueStackSize -= 1;
    value = valueStack[valueStackSize];
}

if (value.type == Types.STRING) {
    stringKey = (string) value.internalValue;
    stringSwitch = stringSwitchesByPc[pc];
    if (stringSwitch == null) {
        stringSwitch = initializeStringSwitchStatement(vm, pc, row);
    }

    i = stringSwitch.TryGet(stringKey, -1); // You'll never jump backwards, so -1 is safe as sentinel value.
    if (i == -1) {
        pc += row[0];
    } else {
        pc += i;
    }
} else {
    hasInterrupt = EX_InvalidArgument(ec, "Switch statement expects a string.");
}
