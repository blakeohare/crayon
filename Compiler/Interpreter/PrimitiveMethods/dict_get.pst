
if (argCount != 1 && argCount != 2) {
    hasInterrupt = EX_InvalidArgument(ec, "Dictionary get method requires 1 or 2 arguments.");
} else {

    value = funcArgs[0]; // key
    switch (value.type) {

        case Types.INTEGER:
            int1 = (int) value.internalValue;
            i = dictImpl.intToIndex.TryGet(int1, -1);
            break;

        case Types.INSTANCE:
            int1 = Core.ForceParens((ObjectInstance) value.internalValue).objectId;
            i = dictImpl.intToIndex.TryGet(int1, -1);
            break;

        case Types.STRING:
            string1 = (string) value.internalValue;
            i = dictImpl.stringToIndex.TryGet(string1, -1);
            break;
    }

    if (i == -1)  {
        // default fallback value
        if (argCount == 2) {
            output = funcArgs[1];
        } else {
            output = VALUE_NULL;
        }
    } else {
        output = dictImpl.values[i];
    }

}
