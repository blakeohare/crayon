if (argCount != 1) {
    hasInterrupt = EX_InvalidArgument(ec, primitiveMethodWrongArgCountError("list remove method", 1, argCount));
} else {
    value = funcArgs[0];
    if (value.type != Types.INTEGER) {
        hasInterrupt = EX_InvalidArgument(ec, "Argument of list.remove must be an integer index.");
    } else {
        int1 = ((int) value.internalValue);
        len = list1.Size();

        if (int1 < 0) int1 += len;

        if (int1 < 0 || int1 >= len) {
            hasInterrupt = EX_IndexOutOfRange(ec, "Index out of range.");
        } else {

            if (returnValueUsed) {
                output = list1[int1];
            }

            list1.RemoveAt(int1);
        }
    }
}
