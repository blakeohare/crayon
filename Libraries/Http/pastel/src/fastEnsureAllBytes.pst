/*
    arg1: some user provided value.
    arg2: an object to populate native data.
        nativeData[0] -> array of bytes

    Ensure the value is a list of values that are valid for the byte range (-128 to 255)
    and then set that array of bytes to the object

    return true upon success.
*/
VM.Value lib_http_fastEnsureAllBytes(VM.VmContext vm, Array<VM.Value> args) {

    if (args[0].type == VM.Types.LIST) {
        VM.ListImpl list1 = (VM.ListImpl) args[0].internalValue;
        int i = list1.size;
        int int1 = 0;
        Array<int> intArray1 = new Array<int>(i);
        VM.Value value = null;
        while (i > 0) {
            i -= 1;
            if (@ext_boolean("ARRAY_IS_LIST")) {
                value = list1.list[i];
            } else {
                value = list1.array[i];
            }
            if (value.type != VM.Types.INTEGER) {
                return vm.globalFalse;
            }

            int1 = (int) value.internalValue;
            if (int1 < 0) {
                if (int1 < -128) return vm.globalFalse;
                int1 += 256;
            } else if (int1 >= 256) {
                return vm.globalFalse;
            }

            intArray1[i] = int1;
        }

        Array<object> objArray1 = new Array<object>(1);
        objArray1[0] = intArray1;
        VM.ObjectInstance objInstance1 = (VM.ObjectInstance) args[1].internalValue;
        objInstance1.nativeData = objArray1;
        return vm.globalTrue;
    }
    return vm.globalFalse;
}
