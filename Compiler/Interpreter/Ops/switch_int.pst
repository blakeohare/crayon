/*
    row[0] -> default jump offset
    row[2n + 1] -> int value
    row[2n + 2] -> jump offset
*/

if (@ext_boolean("HAS_INCREMENT")) {
    value = valueStack[--valueStackSize];
} else {
    valueStackSize -= 1;
    value = valueStack[valueStackSize];
}

if (value.type == Types.INTEGER) {
    intKey = (int) value.internalValue;
    integerSwitch = integerSwitchesByPc[pc];
    if (integerSwitch == null) {
        integerSwitch = initializeIntSwitchStatement(vm, pc, row);
    }

    if (integerSwitch.Contains(intKey)) {
        pc += integerSwitch[intKey];
    } else {
        pc += row[0];
    }
} else {
    hasInterrupt = EX_InvalidArgument(ec, "Switch statement expects an integer.");
}
