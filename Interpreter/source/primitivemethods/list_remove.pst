if (argCount != 1) {
    hasInterrupt = EX_InvalidArgument(ec, primitiveMethodWrongArgCountError("list remove method", 1, argCount));
} else {
    value = funcArgs[0];
    if (value.type != Types.INTEGER) {
        hasInterrupt = EX_InvalidArgument(ec, "Argument of list.remove must be an integer index.");
    } else {
        int1 = (int) value.internalValue;
        _len = list1.size;

        if (int1 < 0) int1 += _len;

        if (int1 < 0 || int1 >= _len) {
            hasInterrupt = EX_IndexOutOfRange(ec, "Index out of range.");
        } else {

            if (returnValueUsed) {
                if (@ext_boolean("ARRAY_IS_LIST")) {
                    output = list1.list[int1];
                } else {
                    output = list1.array[int1];
                }
            }

            _len = list1.size - 1;
            list1.size = _len;
            if (@ext_boolean("ARRAY_IS_LIST")) {
                list1.list.RemoveAt(int1);
            } else {
                for (i = int1; i < _len; i += 1) {
                    list1.array[i] = list1.array[i + 1];
                }
                list1.array[_len] = null;
            }
        }
    }
}
