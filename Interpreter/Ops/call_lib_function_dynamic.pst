int1 = row[0];
argCount = row[2];
object1 = libFunctionPointers[pc];
for (i = argCount - 1; i >= 0; i -= 1) {
    valueStackSize -= 1;
    funcArgs[i] = valueStack[valueStackSize];
}
prepareToSuspend(ec, stack, valueStackSize, pc);
if (true) {
    value = Core.InvokeDynamicLibraryFunction(object1, funcArgs);
    if (ec.executionStateChange) {
        ec.executionStateChange = false;
        if (ec.executionStateChangeCommand == 1) {
            return suspendInterpreter();
        }
    }
}
if (row[3] == 1) {
    @import("ValueStackCapacityCheck.cry");
    valueStack[valueStackSize] = value;
    valueStackSize += 1;
}
