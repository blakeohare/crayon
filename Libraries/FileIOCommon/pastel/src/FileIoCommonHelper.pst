object lib_fileiocommon_getDiskObject(VM.Value diskObjectArg) {
    VM.ObjectInstance objInst = (VM.ObjectInstance) diskObjectArg.internalValue;
    return objInst.nativeData[0];
}

object lib_fileiocommon_listToBytes(List<VM.Value> listOfMaybeInts) {
    Array<byte> bytes = new Array<byte>(listOfMaybeInts.Size());
    VM.Value intValue = null;
    int byteValue = 0;
    for (int i = listOfMaybeInts.Size() - 1; i >= 0; i -= 1) {
        intValue = listOfMaybeInts[i];
        if (intValue.type != VM.Types.INTEGER) {
            return null;
        }
        byteValue = (int) intValue.internalValue;
        if (byteValue >= 256) return null;
        if (byteValue < 0) {
            if (byteValue < -128) return null;
            byteValue += 256;
        }
        bytes[i] = (byte) byteValue;
    }
    return bytes;
}
