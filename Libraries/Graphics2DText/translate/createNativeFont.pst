/*
    args[0] -> NativeFont (nativeData array already allocated)
        nativeData[0] -> fill this in with the native font object
    args[1] -> type
        FontSourceType:
        0 -> default for style (serif, sans-serif, monospace)
        1 -> resource
        2 -> file
        3 -> system installed font
    args[2] -> id
        This value varies depending on the type
        for default, this is the enum value of FontClass
            1 -> serif
            2 -> sans serif
            3 -> monosapce
        for resource, this is the resource path
        for file, this is the file path
        for system font, this is just the name
    args[3] -> size (float)
    args[4] -> red
    args[5] -> green
    args[6] -> blue
    args[7] -> style bitmask
        0 -> normal
        1 -> bold
        2 -> italic
        3 -> bold + italic (this will always be a valid bitmask)

    output status code
        0 -> OK
        1 -> font not installed
        2 -> font resource not found

*/
Value lib_graphics2dtext_function_createNativeFont(Array<Value> args) {
    ObjectInstance nf = (ObjectInstance) args[0].internalValue;
    Array<object> nfOut = nf.nativeData;
    int fontType = (int) args[1].internalValue;
    string fontPath = "";
    if (fontType == 0) {
        fontType = (int)args[2].internalValue;
    } else {
        fontPath = (string)args[2].internalValue;

        if (fontType == 1) {
            Value res = resource_manager_getResourceOfType(fontPath, "TTF");
            if (res.type == Types.NULL) return buildInteger(2); // not found
            List<Value> resList = (List<Value>)res.internalValue;
            if (!(bool) resList[0].internalValue) return buildInteger(2); // path found, but not a font.
            fontPath = (string) resList[1].internalValue; // convert to a resource path
        }
    }
    int fontClass = 0;
    int fontSize = (int) args[3].internalValue;
    int red = (int)args[4].internalValue;
    int green = (int)args[5].internalValue;
    int blue = (int)args[6].internalValue;
    int styleBitmask = (int)args[7].internalValue;
    int isBold = styleBitmask & 1;
    int isItalic = styleBitmask & 2;

    // TODO: just put all these inline so that the method swapper can trim a bunch of code
    nfOut[0] = Native._lib_graphics2dtext_createNativeFont(fontType, fontClass, fontPath, fontSize, red, green, blue, isBold > 0, isItalic > 0);

    if (nfOut[0] == null) {
        if (fontType == 3) return buildInteger(1);
        return buildInteger(2);
    }

    return buildInteger(0);
}
