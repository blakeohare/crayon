/*
    Create a directory

    arg 1: disk host object
    arg 2: well-formed and sandboxed path
    arg 3: boolean
        true -> create all parent directories if they don't currently exist
        false -> fail if the parent directory does not exist
*/

import inline "FrameworkFunctions/3_arg.cry";

string1 = $_cast('string', Value$arg2.internalValue);
if ($_cast('bool', Value$arg3.internalValue)) {
    int1 = 0;
    if (!$_lib_fileiocommon_directoryExists(
        lib_fileiocommon_getDiskObject(arg1),
        $_lib_fileiocommon_getDirRoot(string1))) {

        int1 = 4;
    } else {
        stringList1 = $_new_list('string');
        bool1 = true;
        while (bool1 && !$_lib_fileiocommon_directoryExists(lib_fileiocommon_getDiskObject(arg1), string1)) {
            $_list_push(stringList1, string1);
            int1 = $_lib_fileiocommon_getDirParent(string1, stringOutParam);
            string1 = $_array_get(stringOutParam, 0);
            if (int1 != 0) {
                bool1 = false;
            }
        }

        if (bool1) {
            for (i = $_list_length(stringList1) - 1; i >= 0; i -= 1) {
                string1 = $_list_get(stringList1, i);
                int1 = $_lib_fileiocommon_directoryCreate(
                    lib_fileiocommon_getDiskObject(arg1),
                    string1);
                if (int1 != 0) {
                    i = -1; // break
                }
            }
        }
    }
} else {
    int1 = $_lib_fileiocommon_directoryCreate(
        lib_fileiocommon_getDiskObject(arg1),
        string1);
}

output = buildInteger(int1);
