if (argCount != 1) {
    if (argCount == 0) {
        value2 = VALUE_EMPTY_STRING;
    } else {
        return generateException(stack, pc, valueStackSize, ec, CoreExceptionTypes.INVALID_ARGUMENT, primitiveMethodWrongArgCountError("list join method", 1, argCount));
    }
} else {
    value2 = funcArgs[0];
    if (value2.type != Types.STRING) {
        return generateException(stack, pc, valueStackSize, ec, CoreExceptionTypes.INVALID_ARGUMENT, "Argument of list.join needs to be a string.");
    }
}
stringList1 = new List<string>();
string1 = ((string) value2.internalValue);
len = list1.Size();
for (i = 0; i < len; i += 1) {
    stringList1.Add(valueToString(list1[i]));
}
string1 = stringList1.Join(string1);
output = buildString(string1);
