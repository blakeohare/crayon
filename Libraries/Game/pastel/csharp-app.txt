IMPORT: base.txt
IMPORT: ../../../Interpreter/flags-csharp.txt

LANGUAGE: csharp
FLAG: LIB_GAMEPAD_SUPPORTED: true

DEPENDENCY: VM: ../../../Interpreter/csharp-app.txt

OUTPUT-STRUCTS: ../native/csharp-app/gen/structs
OUTPUT-FUNCTIONS: ../native/csharp-app/gen/LibraryWrapper.cs

NAMESPACE-FUNCTIONS: Interpreter.Libraries.Game
NAMESPACE-STRUCTS: Interpreter.Libraries.Game
FUNCTION-WRAPPER-CLASS: LibraryWrapper

EXT: _lib_game_get_events_raw_list: GameWindow.Instance.GetEvents()
EXT: _lib_game_getScreenInfo: GameWindow.GetScreenInfo([ARG:1])
EXT: _lib_game_getTouchState: AlwaysTrue()
EXT: _lib_game_initialize_game_with_fps: GameWindow.FPS = [ARG:1]
EXT: _lib_game_initialize_screen: GameWindow.InitializeScreen([ARG:1], [ARG:2], [ARG:3], [ARG:4], [ARG:5])
EXT: _lib_game_set_title: GameWindow.Instance.SetTitle([ARG:1])
EXT: _lib_game_clockTick: AlwaysTrue()
EXT: _lib_game_getNativeWindowHandle: GameWindow.Instance
EXT: _lib_game_set_window_mode: GameWindow.Instance.SetScreenMode([ARG:1], [ARG:2], [ARG:3])
EXT: _lib_game_GetCallbackFunctions: GameWindow.GetCallbackFunctions()
EXT: _lib_game_audio_isAudioSupported: AlwaysTrue()
EXT: _lib_game_audio_musicIsPlaying: Libraries.Game.AudioHelper.AudioMusicIsPlaying()
EXT: _lib_game_audio_musicLoadFromResource: Libraries.Game.AudioHelper.MusicLoadResource([ARG:1])
EXT: _lib_game_audio_musicPause: Libraries.Game.AudioHelper.MusicPause()
EXT: _lib_game_audio_musicPlayFile: Libraries.Game.AudioHelper.AudioMusicPlay([ARG:1], [ARG:3])
EXT: _lib_game_audio_musicPlayResource: Libraries.Game.AudioHelper.AudioMusicPlay([ARG:1], [ARG:3])
EXT: _lib_game_audio_musicSetVolume: Libraries.Game.AudioHelper.MusicSetVolume([ARG:1])
EXT: _lib_game_audio_musicVerifyFileExists: System.IO.File.Exists([ARG:1])
EXT: _lib_game_audio_readLocalSoundResource: Libraries.Game.AudioHelper.GetSoundInstance([ARG:1])
EXT: _lib_game_audio_sfxGetState: Libraries.Game.AudioHelper.AudioSoundGetState([ARG:1], [ARG:2], [ARG:3])
EXT: _lib_game_audio_sfxPlay: Libraries.Game.AudioHelper.AudioSoundPlay([ARG:1], [ARG:2], [ARG:3])
EXT: _lib_game_audio_sfxResume: Libraries.Game.AudioHelper.AudioSoundResume([ARG:1], [ARG:2], [ARG:3], [ARG:4])
EXT: _lib_game_audio_sfxStop: Libraries.Game.AudioHelper.AudioSoundStop([ARG:1], [ARG:2], [ARG:3], [ARG:4], [ARG:5])
EXT: _lib_game_audio_audioStop: Libraries.Game.AudioHelper.AudioStop([ARG:1])
EXT: _lib_game_gamepad_is_supported: AlwaysTrue()
EXT: _lib_game_gamepad_platform_requires_refresh: AlwaysFalse()
EXT: _lib_game_gamepad_get_current_device_count: Libraries.Game.GamepadTranslationHelper.GetCurrentDeviceCount()
EXT: _lib_game_gamepad_get_device_reference: Libraries.Game.GamepadTranslationHelper.GetDeviceReference([ARG:1])
EXT: _lib_game_gamepad_get_name: Libraries.Game.GamepadTranslationHelper.GetDeviceName([ARG:2])
EXT: _lib_game_gamepad_get_button_count: Libraries.Game.GamepadTranslationHelper.GetDeviceButtonCount([ARG:2])
EXT: _lib_game_gamepad_get_axis_1d_count: Libraries.Game.GamepadTranslationHelper.GetDeviceAxis1dCount([ARG:2])
EXT: _lib_game_gamepad_get_axis_2d_count: Libraries.Game.GamepadTranslationHelper.GetDeviceAxis2dCount([ARG:2])
EXT: _lib_game_gamepad_get_button_state: Libraries.Game.GamepadTranslationHelper.GetDeviceButtonState([ARG:1], [ARG:2])
EXT: _lib_game_gamepad_get_axis_1d_state: Libraries.Game.GamepadTranslationHelper.GetDeviceAxis1dState([ARG:1], [ARG:2])
EXT: _lib_game_gamepad_get_axis_2d_state: Libraries.Game.GamepadTranslationHelper.GetDeviceAxis2dState([ARG:1], [ARG:2], [ARG:3])
EXT: _lib_game_gamepad_poll_universe: Libraries.Game.GamepadTranslationHelper.Poll()
EXT: _lib_game_gamepad_refresh_devices: AlwaysTrue()
EXT: _lib_game_gamepad_config_file_path: ".crayon-csotk.gamepad.config"
EXT: _lib_game_gamepad_getPlatform: 1
EXT: _lib_game_gamepad_jsIsOsx: 0
