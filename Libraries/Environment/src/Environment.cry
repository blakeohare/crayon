namespace Environment {

    function getEnvironmentVariable(name) {
        return $$$('environmentGetVariable', name.upper());
    }

    // Replace instances of environment variables that appear in a string in %VAR_NAME% format.
    function replaceEnvironmentVariables(s) {
        parts = s.split('%');
        len = parts.length;
        if (len < 3) return s;

        output = [parts[0]];
        for (i = 1; i < parts.length; ++i) {
            output.add('%', parts[i]);
        }

        for (i = 2; i < parts.length - 1; i += 2) {
            if (parts[i - 1] == '%' && parts[i + 1] == '%') {
                v = getEnvironmentVariable(parts[i]);
                if (v != null) {
                    parts[i - 1] = '';
                    parts[i + 1] = '';
                    parts[i] = v;
                }
            }
        }

        return output.join();
    }

    function getEnvironment() {
        t = $$$('environmentDescriptor').split('|');
        return {
            'platform': t[0], // windows | mac | linux | web | ios | android
            'type': {
                'web': 'web',
                'ios': 'mobile',
                'android': 'mobile'
            }.get(t[0], 'desktop'),
            'implLang': t[1], // javascript | csharp
        };
    }
}
