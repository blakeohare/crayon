
ec.activeExceptionHandled = false;

// save PC to the stack frame object. If the bubble process doesn't unwind any frames, this will be re-read.
stack.pc = pc;

// get ESF data for this PC
intArray1 = esfData[pc];

value = ec.activeException;
objInstance1 = (ObjectInstance) value.internalValue;
objArray1 = objInstance1.nativeData;
bool1 = (bool) objArray1[0]; // is fatal exception?
intList1 = (List<int>) objArray1[1];

// Bubble the exception until you reach the top of the stack, there is catch/finally (ESF) info, or if this a fatal exception.
while ((stack != null) && (intArray1 == null || bool1)) {
    stack = stack.previous;
    if (stack != null) {
        pc = stack.pc;
        intList1.Add(pc);
        intArray1 = esfData[pc];
    }
}

// Did you get all the way to the top?
if (stack == null) {
    // Exception is uncaught.
    return uncaughtExceptionResult(value);
}

// If you got to this point, that means there's a catch or finally.

int1 = intArray1[0]; // get the PC for the exception sorter
if (int1 < pc) {
    // If the exception sorter is before the current PC that means you're throwing from the catch itself and
    // so it shouldn't catch itself. Go directly to the finally instead.
    int1 = intArray1[1];
}

pc = int1 - 1;
stack.pc = pc;
localsStackOffset = stack.localsStackOffset;
localsStackSetToken = stack.localsStackSetToken;
ec.stackTop = stack;
stack.postFinallyBehavior = PostFinallyBehavior.NOTHING;
ec.currentValueStackSize = valueStackSize;
