Value lib_fileiocommon_function_directoryList(Array<Value> args) {
    int i = 0;
    int int1 = 0;
    List<Value> list1 = null;
    List<string> stringList1 = null;
    Value output = VALUE_NULL;
    Value arg1 = args[0];
    Value arg2 = args[1];
    Value arg3 = args[2];
    Value arg4 = args[3];
    stringList1 = new List<string>();
    int1 = Native._lib_fileiocommon_directoryList(lib_fileiocommon_getDiskObject(arg1), ((string) arg2.internalValue), ((bool) arg3.internalValue), stringList1);
    if (int1 == 0) {
        list1 = ((List<Value>) arg4.internalValue);
        for (i = 0; i < stringList1.Size(); i += 1) {
            list1.Add(buildString(stringList1[i]));
        }
    }
    output = buildInteger(int1);
    return output;
}
