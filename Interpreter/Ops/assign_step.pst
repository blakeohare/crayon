
// row[0] -> name ID
// row[1] -> push the assigned value back to the stack if this is 1.

valueStackSize -= 2;
value = valueStack[(valueStackSize + 1)]; // value to assign
value2 = valueStack[valueStackSize]; // target root
nameId = row[0];

if (value2.type == Types.INSTANCE) {
    objInstance1 = ((ObjectInstance) value2.internalValue);
    classId = objInstance1.classId;
    classInfo = classTable[classId];
    intIntDict1 = classInfo.globalIdToMemberId;
    if (intIntDict1.Contains(nameId)) {
        int1 = intIntDict1[nameId]; // member ID
        int2 = classInfo.functionIds[int1];
        if (int2 == -1) {
            objInstance1.members[int1] = value;
        } else {
            hasInterrupt = EX_InvalidArgument(ec, "Cannot override a method with assignment.");
        }
    } else {
        hasInterrupt = EX_InvalidAssignment(ec, Core.StringConcatAll("'", classInfo.fullyQualifiedName, "' instances do not have a field called '", p.identifiers[nameId], "'"));
    }
} else {
    hasInterrupt = EX_InvalidAssignment(ec, "Cannot assign to a field on this type.");
}

// this shouldn't hurt even when there's an interrupt
if (row[1] == 1) {
    valueStack[valueStackSize] = value;
    valueStackSize += 1;
}
