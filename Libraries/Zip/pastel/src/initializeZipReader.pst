/*
    arg[0] -> ObjectInstance ZipArchiveReader
        nativeData[0] -> populate this with the native pointer to the zip archive
        nativeData[1] -> int n - the number of entries that have been read
    arg[1] -> bytes as integer list

    returns a status code:
        0 - everything is okay
        1 - the byte list contained invalid values.
        2 - the byte array is not a valid zip archive.
*/
VM.Value lib_zip_initializeZipReader(VM.VmContext vm, Array<VM.Value> args) {

    int sc = 0;

    Array<int> byteArray = lib_zip_validateByteList(args[1], true);
    if (byteArray == null) {
        sc = 1;
    } else {
        VM.ObjectInstance obj = (VM.ObjectInstance) args[0].internalValue;
        obj.nativeData = new Array<object>(2);
        obj.nativeData[0] = Extension._lib_zip_createZipReader(byteArray);
        obj.nativeData[1] = 0;
        if (obj.nativeData[0] == null) {
            sc = 2;
        }
    }

    return VM.buildInteger(vm.globals, sc);
}
