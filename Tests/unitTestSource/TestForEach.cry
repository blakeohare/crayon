import CrayonUnit;

class TestForEach : Test {

    constructor() : base() { }

    function testBasic() {
        nums = [1, 2, 3, 4, 5];
        x = 0;
        for (num : nums) {
            x += num;
        }
        assertThat(x).isEqualTo(15);
    }

    function testAppendToListDuringIteration() {
        nums = [1, 2, 3, 4, 5];
        x = 0;
        for (num : nums) {
            if (x == 3) nums.add(100);
            x += num;
        }
        assertThat(x).isEqualTo(115);
    }

    function testRemoveElementDuringIteration() {
        nums = [1, 2, 3, 4, 5];
        x = 0;
        for (num : nums)  {
            if (x == 3) nums.remove(4);
            x += num;
        }
        assertThat(x).isEqualTo(10);
    }

    function testForeachFromPolarityRegressions() {

        buffer = [];
        for (i : [1, 2, 3]) {
            buffer.add(i);
        }

        try {
            for (i : [1, 2, 3]) {
                throw new Exception();
            }
        } catch (Exception e) {
            buffer.add('CAUGHT');
        } finally {
            buffer.add('FINALLY');
        }

        assertThat(buffer.join(' ')).isEqualTo('1 2 3 CAUGHT FINALLY');
    }
}
