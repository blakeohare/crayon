/*
    arg 1: window instance
    arg 2: (string) title of the window
    arg 3: (bool) is show blocking?
    arg 4: (int) current execution context ID
    arg 5: (function pointer) render
    arg 6: (function pointer) onLoad
    arg 7: (function pointer) invokeMenuHandler
    arg 8: (int) width
    arg 9: (int) height
*/
Value lib_nori_function_windowShow(Array<Value> args) {

    Value arg1 = args[0];
    Value arg2 = args[1];
    Value arg3 = args[2];
    Value arg4 = args[3];
    Value arg5 = args[4];
    Value arg6 = args[5];
    Value arg7 = args[6];
    Value arg8 = args[7];
    Value arg9 = args[8];

    ObjectInstance objInstance1 = ((ObjectInstance) arg1.internalValue);
    Array<object> objArray1 = objInstance1.nativeData;
    object object1 = objArray1[0];
    string string1 = ((string) arg2.internalValue);
    bool bool1 = ((bool) arg3.internalValue);
    int int1 = ((int) arg4.internalValue);


    int1 = Core.IntegerDivision(int1, 0); // There was a vm_suspend() here and the auto-gen version had a noop() instead and it makes me nervous so please re-verify what's going on here also I forgot how to throw exceptions from translate code.

    Native._lib_nori_windowShow(
        object1,
        string1,
        bool1,
        int1,
        arg5,
        arg6,
        arg7,
        (int) arg8.internalValue,
        (int) arg9.internalValue);

    return VALUE_NULL;
}
