void vmEnvSetCommandLineArgs(VmContext vm, Array<string> args) {
    vm.environment.commandLineArgs = args;
}

int getVmResultStatus(InterpreterResult result) { return result.status; }
string getVmResultAssemblyInfo(InterpreterResult result) { return result.loadAssemblyInformation; }
double getVmReinvokeDelay(InterpreterResult result) { return result.reinvokeDelay; }
int getVmResultExecId(InterpreterResult result) { return result.executionContextId; }
bool isVmResultRootExecContext(InterpreterResult result) { return result.isRootContext; }
VmGlobals vmGetGlobals(VmContext vm) { return vm.globals; }

void vmEnableLibStackTrace(VmContext vm) {
    vm.environment.showLibStack = true;
}

void vmSetEventLoopObj(VmContext vm, object evLoop) {
    vm.environment.platformEventLoop = evLoop;
}
object vmGetEventLoopObj(VmContext vm) {
    return vm.environment.platformEventLoop ;
}

void vmSetResourceReaderObj(VmContext vm, object rr) {
    vm.environment.resourceReader = rr;
}
object vmGetResourceReaderObj(VmContext vm) {
    return vm.environment.resourceReader ;
}

void vmSetWaxHub(VmContext vm, object wh) {
    vm.environment.waxHub = wh;
}

void vmSetWaxPayload(VmContext vm, string v) {
    vm.environment.waxPayload = v;
}

string vmGetWaxResponse(VmContext vm) {
    return vm.environment.waxResponse;
}

void setVmId(VmContext vm, int id) { vm.id = id; }
int getVmId(VmContext vm) { return vm.id; }
