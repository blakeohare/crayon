if (argCount != 2) {
    hasInterrupt = EX_InvalidArgument(ec, primitiveMethodWrongArgCountError("list insert method", 1, argCount));
} else {

    value = funcArgs[0];
    value2 = funcArgs[1];
    if (value.type != Types.INTEGER) {
        hasInterrupt = EX_InvalidArgument(ec, "First argument of list.insert must be an integer index.");
    } else {

        intArray1 = list1.type;
        if (intArray1 != null) {
            value3 = canAssignTypeToGeneric(vm, value2, intArray1, 0);
            if (value3 == null) {
                hasInterrupt = EX_InvalidArgument(ec, "Cannot insert this type into this type of list.");
            }
            value2 = value3;
        }

        if (!hasInterrupt) {
            if (!@ext_boolean("ARRAY_IS_LIST")) {
                if (list1.size == list1.capacity) increaseListCapacity(list1);
            }

            int1 = (int) value.internalValue;
            len = list1.size;

            if (int1 < 0) int1 += len;

            if (int1 == len) {
                if (@ext_boolean("ARRAY_IS_LIST")) {
                    list1.list.Add(value2);
                } else {
                    list1.array[len] = value2;
                }
                list1.size += 1;
            } else {
                if (int1 < 0 || int1 >= len) {
                    hasInterrupt = EX_IndexOutOfRange(ec, "Index out of range.");
                } else {
                    if (@ext_boolean("ARRAY_IS_LIST")) {
                        list1.list.Insert(int1, value2);
                    } else {
                        for (i = int1; i < len; i += 1) {
                            value3 = list1.array[i];
                            list1.array[i] = value2;
                            value2 = value3;
                        }
                        list1.array[len] = value2;
                    }
                    list1.size += 1;
                }
            }
        }
    }
}
