import Math;
import U3Game;

class LoadingScene : AbstractScene {

    field loader = new GameImageLoader()
        .easeLoadingAnimationAcrossMinimumDuration(.75)
        .addImageModifier((path, img) => {
            if (path.startsWith('images/player/e')) {
                eastImagePath = path.replace('images/player/e', 'images/player/w');
                img = img.clone();
                img.edit().flip(true, false).finish();
                output = {};
                output[eastImagePath] = img;
                return output;
            }
        });

    constructor() : base() { }

    function update() {
        this.loader.update();

        if (this.loader.isDone()) {
            images = this.loader.getImagesByPath();
            for (path : images.keys()) {
                ImageLibrary.addImage(path, images[path]);
            }

            this.switchScene(new PlayScene());
        }
    }

    function render(draw) {
        this.loader.setRenderContext(draw);

        width = 400;
        height = 30;

        left = (SCREEN_WIDTH - width) / 2;
        top = (SCREEN_HEIGHT - height) / 2;

        margin = 10;

        draw.fill(40, 0, 0);
        draw.rectangle(left - margin, top - margin, width + 2 * margin, height + 2 * margin, 80, 80, 80);
        draw.rectangle(left, top, width, height, 0, 0, 0);

        barWidth = Math.floor(width * this.loader.getProgress());
        draw.rectangle(left, top, barWidth, height, 255, 128, 0);
        draw.rectangle(left, top, barWidth, height / 5, 255, 255, 0);
        draw.rectangle(left, top + height * 4 / 5, barWidth, height / 5, 255, 0, 0);
    }
}
