if (argCount == 0) {
    sortLists(list1, list1, Core.IntBuffer16);
    if (Core.IntBuffer16[0] > 0) {
        hasInterrupt = EX_InvalidArgument(ec, "Invalid list to sort. All items must be numbers or all strings, but not mixed.");
    }
} else {
    if (argCount == 1) {
        value2 = funcArgs[0];
        if (value2.type == Types.FUNCTION) {
            primitiveMethodToCoreLibraryFallback = true;
            functionId = metadata.primitiveMethodFunctionIdFallbackLookup[2]; // MAGIC NUMBER: 2 (see metadata initializer)
            funcArgs[1] = value; // funcArgs is allocated very big.
            argCount = 2;
        } else {
            hasInterrupt = EX_InvalidArgument(ec, "list.sort(get_key_function) requires a function pointer as its argument.");
        }
        output = null; // This is required. Triggers function fallback.
    }
}
