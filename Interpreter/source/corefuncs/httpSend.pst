@import("inline/9_arg.pst");

intArray1 = null;
string1 = null;
int1 = (int)arg5.internalValue; // content format (0 -> no content, 1 -> text, 2 -> byte list)
if (int1 == 1) {
    string1 = (string)arg7.internalValue;
} else if (int1 == 2) {
    intArray1 = (Array<int>) Core.ForceParens((ObjectInstance)arg7.internalValue).nativeData[0];
}

list1 = (ListImpl) arg8.internalValue;
stringList = new Array<string>(list1.size);
for (i = 0; i < list1.size; i += 1) {
    if (@ext_boolean("ARRAY_IS_LIST")) {
        stringList[i] = (string)list1.list[i].internalValue;
    } else {
        stringList[i] = (string)list1.array[i].internalValue;
    }
}

objInstance1 = (ObjectInstance)arg9.internalValue;
objInstance1.nativeData = new Array<object>(1);

Extension.CoreFunc_HttpSend(
    vm,
    arg1, // callback
    arg2, // fail callback
    (string)arg3.internalValue, // URL
    (string)arg4.internalValue, // Method
    (string)arg6.internalValue, // content type
    intArray1,
    string1,
    stringList, // headers (string pairs in a flattened list i.e. name: 2n + 0, value: 2n + 1)
    arg9, // bytes object
    objInstance1.nativeData); // bytes object's nativeData

output = VALUE_NULL;
