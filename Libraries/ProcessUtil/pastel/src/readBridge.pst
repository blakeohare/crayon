/*
    args[0] -> (ObjectInstance) process bridge
    args[1] -> (List<any>) output
    args[2] -> (int) magic ID for the thing you want to read
        1 -> status code
        2 -> STDOUT
        3 -> STDERR
*/
VM.Value lib_processutil_readBridge(VM.VmContext vm, Array<VM.Value> args) {
    VM.ObjectInstance bridge = (VM.ObjectInstance) args[0].internalValue;
    VM.ListImpl outputList = (VM.ListImpl) args[1].internalValue;
    int type = (int) args[2].internalValue;
    object mtx = bridge.nativeData[4];
    if (type == 1) {
        int outputInt = Extension._lib_processutil_readBridgeInt(mtx, bridge.nativeData, type);
        VM.addToList(outputList, VM.buildInteger(vm.globals, outputInt));
    } else {
        List<string> output = new List<string>();
        Extension._lib_processutil_readBridgeStrings(mtx, bridge.nativeData, type, output);
        for (int i = 0; i < output.Size(); i += 1) {
            VM.addToList(outputList, VM.buildString(vm.globals, output[i]));
        }
    }
    return vm.globalNull;
}
